{"version":3,"sources":["components/RankingsTable/RankingsEntry.component.tsx","components/RankingsTable/RankingsTable.component.tsx","components/RankingsHeader/RankingsHeader.component.tsx","components/Layout/Layout.component.tsx","components/Loading/Loading.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RankingsEntry","props","className","username","value","RankingsTable","model","entries","map","entry","key","TitleImg","url","src","alt","TitleHeader","titleUrl","txt","titleText","FullHeader","category","isColumnHeadersTop","width","layoutWidth","style","RankingsHeader","headerUrl","Layout","useState","setColumnHeadersTop","setLayoutWidth","layoutDiv","useCallback","node","console","log","clientWidth","rhProps","data","config","ref","onScroll","event","target","scrollTop","Loading","defaultState","dataUrl","App","setData","isLoading","setIsLoading","useEffect","a","sleep","Promise","resolve","require","result","fetchData","ms","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.812ec6b9.chunk.js","sourcesContent":["import './RankingsEntry.css';\r\nimport { DataEntry } from \"../../data/data.state\";\r\n\r\nexport function RankingsEntry(props: DataEntry) {\r\n    return (\r\n        <li className=\"entry\">\r\n            <span>{props.username}</span>\r\n            <span>{props.value}</span>\r\n        </li>)\r\n}","import './RankingsTable.css';\r\nimport { DataState } from \"../../data/data.state\";\r\nimport { RankingsEntry } from \"./RankingsEntry.component\";\r\n\r\nexport function RankingsTable(props: { model: DataState }) {    \r\n    return (\r\n        <main className=\"entries\">\r\n            <ul>\r\n                { \r\n                    props.model.entries?.map(entry=>\r\n                        <RankingsEntry {...entry} key={entry.username}/>)\r\n                }\r\n            </ul>\r\n        </main>\r\n    );\r\n}\r\n","import './RankingsHeader.css';\r\nimport { RankingsHeaderProps } from './RankingsHeader.props';\r\n\r\nconst TitleImg = (url:string) => (\r\n    <h1>\r\n        <img className=\"title-img\" src={url} alt=\"\"/>\r\n    </h1>);\r\n\r\nconst TitleText = (txt:string) => (<h1>{txt}</h1>);\r\n\r\nconst TitleHeader = (props: RankingsHeaderProps) => (\r\n    <>\r\n        {\r\n            props.titleUrl?\r\n                TitleImg(props.titleUrl):\r\n                TitleText(props.titleText? props.titleText: \"untitled\")\r\n        }   \r\n    </>);\r\n\r\nconst SubHeader = (category: string, isColumnHeadersTop: boolean, width: number)=>(\r\n    <h2 className={isColumnHeadersTop?\"categories-header fixed\" : \"categories-header\"}\r\n        style={ {width: width} }>\r\n        <div>\r\n            <span>User Name</span>\r\n            <span>{category}</span>\r\n        </div>\r\n    </h2>);\r\n\r\nconst FullHeader = (props: RankingsHeaderProps) => (\r\n    <>\r\n        {TitleHeader(props)}\r\n        {SubHeader(props.category, props.isColumnHeadersTop, props.layoutWidth)}\r\n    </>);\r\n\r\nexport function RankingsHeader(props: RankingsHeaderProps) {\r\n    return (\r\n        <header className=\"header\"> \r\n            {\r\n                props.headerUrl ?\r\n                    TitleImg(props.headerUrl): \r\n                    FullHeader(props)\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\n            /*\r\n            {\r\n                props.config.headerUrl ?\r\n                    TitleImg(props.config.headerUrl): \r\n                    FullHeader(props.config, props.data.category)\r\n            }\r\n            */\r\n\r\n\r\n","import './Layout.css';\r\nimport { RankingsTable } from \"../RankingsTable/RankingsTable.component\";\r\nimport { RankingsHeader } from \"../RankingsHeader/RankingsHeader.component\";\r\nimport { RankingsHeaderProps } from \"../RankingsHeader/RankingsHeader.props\";\r\nimport { AppState } from '../../App.state';\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nexport function Layout(props: AppState) {\r\n    const [isColumnHeadersTop, setColumnHeadersTop] = useState(false);\r\n\r\n    const handleScrolling = (event:any) => { \r\n        if(!isColumnHeadersTop && event.target.scrollTop >= 130) {\r\n            console.log(\"add class\");\r\n            setColumnHeadersTop(true);\r\n        }\r\n        else if(isColumnHeadersTop && event.target.scrollTop < 130) {\r\n            console.log(\"remove class\");\r\n            setColumnHeadersTop(false);\r\n        } \r\n    };\r\n\r\n    /*\r\n    const ref = useRef<HTMLHeadingElement>(null);\r\n    \r\n    useEffect(() => {\r\n        console.log('width', ref.current ? ref.current.clientWidth : 0);\r\n    }, [ref.current]);\r\n    */\r\n\r\n    const [layoutWidth, setLayoutWidth] = useState(0);\r\n    const layoutDiv = useCallback(node => {\r\n        if (node !== null) {\r\n            console.log(\"width: \", node.clientWidth);\r\n            setLayoutWidth(node.clientWidth);\r\n        }\r\n    }, []);\r\n    \r\n\r\n    const rhProps: RankingsHeaderProps = {\r\n        isColumnHeadersTop: isColumnHeadersTop,\r\n        category: props.data.category,\r\n        titleText: props.config.titleText,\r\n        titleUrl: props.config.titleUrl,\r\n        headerUrl: props.config.headerUrl,\r\n        layoutWidth: layoutWidth\r\n    }\r\n\r\n    return (\r\n        <div className=\"layout\" ref={layoutDiv} onScroll={handleScrolling}>\r\n            <RankingsHeader {...rhProps}/>\r\n            <RankingsTable model={props.data} />\r\n        </div>);\r\n}","import './Loading.css';\r\n\r\nexport function Loading() {\r\n    return (\r\n        <div className=\"load-container indicator\">\r\n            <div className=\"loader\">Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Layout } from './components/Layout/Layout.component';\nimport { Loading } from './components/Loading/Loading.component';\nimport { AppState } from './App.state';\n\n//import * as giftedSubs from '../public/giftedSubs.test.json';\n\nconst defaultState: AppState = { data: { category: 'default', entries: [] }, config: { dataUrl: '' } };\n\nfunction App() {\n  const [data, setData] = useState<AppState>(defaultState);\n  const [url, setUrl] = useState('/config/user-bits.json');\n  const [isLoading, setIsLoading] = useState(false);\n \n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      \n      await sleep(1000);\n\n      const result = await Promise.resolve(\n        require(\"./test/giftedSubs.test.json\")\n      );\n\n      setData({ \n        data: result, \n        config: { dataUrl: '', \n          titleText: \"Hall of Fame\",\n          titleUrl: \"/Cutom-Img.png\" \n        } \n      });\n      setIsLoading(false);\n    };\n \n    fetchData();\n  }, [url]);\n    \n  return (\n    <>\n      {\n        isLoading? \n          <Loading/>: \n          <Layout {...data}></Layout>\n      }\n    </>\n  );\n}\n\nexport default App;\n\n\n/*\n      \n\n*/\n\nfunction sleep(ms: number) {\n  // add ms millisecond timeout before promise resolution\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}