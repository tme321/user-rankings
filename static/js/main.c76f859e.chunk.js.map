{"version":3,"sources":["components/RankingsTable/RankingsEntry.component.tsx","components/RankingsTable/RankingsTable.component.tsx","components/RankingsHeader/RankingsHeader.component.tsx","components/Layout/Layout.component.tsx","components/Loading/Loading.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RankingsEntry","props","className","username","value","RankingsTable","model","entries","map","entry","key","TitleImg","url","src","TitleHeader","config","titleUrl","txt","titleText","SubHeader","category","RankingsHeader","headerUrl","data","Layout","Loading","defaultState","dataUrl","App","useState","setData","isLoading","setIsLoading","useEffect","a","sleep","Promise","resolve","require","result","fetchData","ms","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2lKAGO,SAASA,EAAcC,GAC1B,OACI,qBAAIC,UAAU,QAAd,UACI,+BAAOD,EAAME,WACb,+BAAOF,EAAMG,WCHlB,SAASC,EAAcJ,GAA8B,IAAD,EACvD,OACI,sBAAMC,UAAU,UAAhB,SACI,uCAEQD,EAAMK,MAAMC,eAFpB,aAEQ,EAAqBC,KAAI,SAAAC,GAAK,OAC1B,wBAAC,EAAD,2BAAmBA,GAAnB,IAA0BC,IAAKD,EAAMN,mB,UCNvDQ,EAAW,SAACC,GAAD,OAAiB,6BAAI,qBAAKV,UAAU,YAAYW,IAAKD,OAGhEE,EAAc,SAACC,GAAD,OAChB,mCAEQA,EAAOC,SACHL,EAASI,EAAOC,WANbC,EAOOF,EAAOG,UAAUH,EAAOG,UAAU,WAPzB,6BAAKD,OAAtB,IAACA,GAWbE,EAAY,SAACC,GAAD,OACd,+BACI,6CACA,+BAAOA,QASR,SAASC,EAAepB,GAC3B,OACI,wBAAQC,UAAU,SAAlB,SAEQD,EAAMc,OAAOO,UACTX,EAASV,EAAMc,OAAOO,YAXtBP,EAYWd,EAAMc,OAZIK,EAYInB,EAAMsB,KAAKH,SAXpD,qCACKN,EAAYC,GACZI,EAAUC,SAHA,IAACL,EAAqBK,ECjBlC,SAASI,EAAOvB,GACnB,OACI,sBAAKC,UAAU,SAAf,UACI,cAAC,EAAD,eAAoBD,IACpB,cAAC,EAAD,CAAeK,MAAOL,EAAMsB,U,MCPjC,SAASE,IACZ,OACI,qBAAKvB,UAAU,2BAAf,SACI,qBAAKA,UAAU,SAAf,0BCIZ,IAAMwB,EAAyB,CAAEH,KAAM,CAAEH,SAAU,UAAWb,QAAS,IAAMQ,OAAQ,CAAEY,QAAS,KAoDjFC,MAlDf,WAAgB,IAAD,EACWC,mBAAmBH,GAD9B,mBACNH,EADM,KACAO,EADA,OAESD,mBAAS,0BAFlB,mBAENjB,EAFM,aAGqBiB,oBAAS,IAH9B,mBAGNE,EAHM,KAGKC,EAHL,KAuCb,OAlCAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,6DAChBF,GAAa,GADG,SAGVG,EAAM,KAHI,uBAKKC,QAAQC,QAC3BC,EAAQ,KANM,OAKVC,EALU,OA0BhBT,EAAQ,CAAEP,KAAMgB,EAAQxB,OAAQ,CAAEY,QAAS,GAAIT,UAAW,kBAAmBF,SAAU,oBACvFgB,GAAa,GA3BG,2CAAH,qDA8BfQ,KACC,CAAC5B,IAGF,mCAEImB,EACE,cAAC,EAAD,IACA,cAAC,EAAD,eAAYR,OActB,SAASY,EAAMM,GAEb,OAAO,IAAIL,SAAQ,SAAAC,GAAO,OAAIK,WAAWL,EAASI,MCrEpD,IAYeE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c76f859e.chunk.js","sourcesContent":["import './RankingsEntry.css';\r\nimport { DataEntry } from \"../../data/data.state\";\r\n\r\nexport function RankingsEntry(props: DataEntry) {\r\n    return (\r\n        <li className=\"entry\">\r\n            <span>{props.username}</span>\r\n            <span>{props.value}</span>\r\n        </li>)\r\n}","import './RankingsTable.css';\r\nimport { DataState } from \"../../data/data.state\";\r\nimport { RankingsEntry } from \"./RankingsEntry.component\";\r\n\r\nexport function RankingsTable(props: { model: DataState }) {    \r\n    return (\r\n        <main className=\"entries\">\r\n            <ul>\r\n                { \r\n                    props.model.entries?.map(entry=>\r\n                        <RankingsEntry {...entry} key={entry.username}/>)\r\n                }\r\n            </ul>\r\n        </main>\r\n    );\r\n}\r\n","import './RankingsHeader.css';\r\nimport { AppState } from '../../App.state';\r\nimport { ConfigState } from '../../config/config.state';\r\n\r\nconst TitleImg = (url:string) => (<h1><img className=\"title-img\" src={url}/></h1>);\r\nconst TitleText = (txt:string) => (<h1>{txt}</h1>);\r\n\r\nconst TitleHeader = (config: ConfigState) => (\r\n    <>\r\n        {\r\n            config.titleUrl?\r\n                TitleImg(config.titleUrl):\r\n                TitleText(config.titleText?config.titleText:\"No Title\")\r\n        }   \r\n    </>);\r\n\r\nconst SubHeader = (category: string)=>(\r\n    <h2>\r\n        <span>User Name</span>\r\n        <span>{category}</span>\r\n    </h2>);\r\n\r\nconst FullHeader = (config: ConfigState, category: string) => (\r\n    <>\r\n        {TitleHeader(config)}\r\n        {SubHeader(category)}\r\n    </>);\r\n\r\nexport function RankingsHeader(props: AppState) {\r\n    return (\r\n        <header className=\"header\">\r\n            {\r\n                props.config.headerUrl ?\r\n                    TitleImg(props.config.headerUrl): \r\n                    FullHeader(props.config, props.data.category)\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\n","import './Layout.css';\r\nimport { RankingsTable } from \"../RankingsTable/RankingsTable.component\";\r\nimport { RankingsHeader } from '../RankingsHeader/RankingsHeader.component';\r\nimport { AppState } from '../../App.state';\r\n\r\nexport function Layout(props: AppState) {\r\n    return (\r\n        <div className=\"layout\">\r\n            <RankingsHeader {...props}/>\r\n            <RankingsTable model={props.data} />\r\n        </div>);\r\n}","import './Loading.css';\r\n\r\nexport function Loading() {\r\n    return (\r\n        <div className=\"load-container indicator\">\r\n            <div className=\"loader\">Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Layout } from './components/Layout/Layout.component';\nimport { Loading } from './components/Loading/Loading.component';\nimport { AppState } from './App.state';\n\n//import * as giftedSubs from '../public/giftedSubs.test.json';\n\nconst defaultState: AppState = { data: { category: 'default', entries: [] }, config: { dataUrl: '' } };\n\nfunction App() {\n  const [data, setData] = useState<AppState>(defaultState);\n  const [url, setUrl] = useState('/config/user-bits.json');\n  const [isLoading, setIsLoading] = useState(false);\n \n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      \n      await sleep(1000);\n      //const result = await axios(url);\n      const result = await Promise.resolve(\n        require(\"./test/giftedSubs.test.json\")\n      );\n        /*{\n        \"category\": \"Bits\",\n        \"entries\": [\n            { \n                \"username\": \"bob\",\n                \"value\": \"42\"\n            },\n            { \n                \"username\": \"jon\",\n                \"value\": \"69\"\n            },\n            { \n                \"username\": \"ann\",\n                \"value\": \"34893720958\"\n            }\n        ]\n      });*/\n\n      setData({ data: result, config: { dataUrl: '', titleText: \"Any Random Text\", titleUrl: \"/Cutom-Img.png\" } });\n      setIsLoading(false);\n    };\n \n    fetchData();\n  }, [url]);\n    \n  return (\n    <>\n      {\n        isLoading? \n          <Loading/>: \n          <Layout {...data}></Layout>\n      }\n    </>\n  );\n}\n\nexport default App;\n\n\n/*\n      \n\n*/\n\nfunction sleep(ms: number) {\n  // add ms millisecond timeout before promise resolution\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}